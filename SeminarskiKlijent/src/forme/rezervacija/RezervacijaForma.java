/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package forme.rezervacija;

import controller.ClientController;
import domen.Clan;
import domen.Film;
import domen.Rezervacija;
import domen.StavkaRezervacije;
import domen.Zaposleni;
import forme.clan.PretragaClanForma;
import forme.clan.model.ModelTabeleClan;
import forme.film.PretragaFilmForma;
import forme.film.model.ModelTabeleFilm;
import forme.stavkarezervacije.model.ModelTabeleStavke;
import java.util.Date;
import java.util.LinkedList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author vanja
 */
public class RezervacijaForma extends javax.swing.JDialog {

    /**
     * Creates new form RezervacijaForma
     */
    private ModelTabeleClan modelTabeleClan;
    private ModelTabeleFilm modelTabeleFilm;
    private ModelTabeleStavke modelTabeleStavke;
    private Rezervacija rezervacija;
    
    public RezervacijaForma(java.awt.Frame parent, boolean modal, Rezervacija rezervacija) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
        
        this.rezervacija = rezervacija;
        popuniTabeluClan();
        popuniTabeluFilm();
        
        if(rezervacija.getIdRezervacije()>0){
            chckBoxVracena.setSelected(rezervacija.isStatusRezervacije());
            int indexClana = modelTabeleClan.naKomJeReduClan(rezervacija.getClan());
            tblClan.setRowSelectionInterval(indexClana, indexClana);
            modelTabeleStavke = new ModelTabeleStavke(rezervacija.getStavke());
            btnSacuvajRezervaciju.setText("Izmeni rezervaciju");
        }else{
            chckBoxVracena.setVisible(false);
            modelTabeleStavke = new ModelTabeleStavke(new LinkedList<>());
        }
        tblStavke.setModel(modelTabeleStavke);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        chckBoxVracena = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblClan = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtPretragaClana = new javax.swing.JTextField();
        btnPretraziClanove = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblFilmovi = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        txtPretragaFilma = new javax.swing.JTextField();
        btnPretraziFilmove = new javax.swing.JButton();
        btnDodajFilm = new javax.swing.JButton();
        btnIzbrisiFilm = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblStavke = new javax.swing.JTable();
        btnSacuvajRezervaciju = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        chckBoxVracena.setText("Vracena");

        tblClan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblClan);

        jLabel1.setText("Clan");

        jLabel2.setText("Pretraga clana");

        btnPretraziClanove.setText("Pretrazi clanove");
        btnPretraziClanove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPretraziClanoveActionPerformed(evt);
            }
        });

        tblFilmovi.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tblFilmovi);

        jLabel3.setText("Pretraga filmova");

        btnPretraziFilmove.setText("Pretrazi filmove");
        btnPretraziFilmove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPretraziFilmoveActionPerformed(evt);
            }
        });

        btnDodajFilm.setText("Dodaj film");
        btnDodajFilm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDodajFilmActionPerformed(evt);
            }
        });

        btnIzbrisiFilm.setText("Izbrisi film");
        btnIzbrisiFilm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIzbrisiFilmActionPerformed(evt);
            }
        });

        tblStavke.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(tblStavke);

        btnSacuvajRezervaciju.setText("Sacuvaj rezervaciju");
        btnSacuvajRezervaciju.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSacuvajRezervacijuActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(txtPretragaClana)
                                .addGap(18, 18, 18)
                                .addComponent(btnPretraziClanove))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(chckBoxVracena)
                                    .addComponent(jLabel1))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(txtPretragaFilma, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                        .addComponent(btnPretraziFilmove)
                        .addGap(19, 19, 19))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnDodajFilm, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnIzbrisiFilm, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addContainerGap())))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSacuvajRezervaciju)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(chckBoxVracena)
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addGap(7, 7, 7)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtPretragaClana, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPretraziClanove))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtPretragaFilma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPretraziFilmove))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDodajFilm)
                    .addComponent(btnIzbrisiFilm))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnSacuvajRezervaciju)
                .addContainerGap(13, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnPretraziClanoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPretraziClanoveActionPerformed
        popuniTabeluClan();
    }//GEN-LAST:event_btnPretraziClanoveActionPerformed

    private void btnPretraziFilmoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPretraziFilmoveActionPerformed
        popuniTabeluFilm();
    }//GEN-LAST:event_btnPretraziFilmoveActionPerformed

    private void btnDodajFilmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDodajFilmActionPerformed
        try{
            int izabraniRedFilma =tblFilmovi.getSelectedRow();
            
            if(izabraniRedFilma>-1){
                Film film = modelTabeleFilm.vratiIzabraniFilm(izabraniRedFilma);
                
                StavkaRezervacije stavkaRezervacije = new StavkaRezervacije(rezervacija, film);
                modelTabeleStavke.dodajStavku(stavkaRezervacije);
            }
        }catch(Exception ex){
            JOptionPane.showMessageDialog(rootPane, ex.getMessage());
        }
    }//GEN-LAST:event_btnDodajFilmActionPerformed

    private void btnIzbrisiFilmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIzbrisiFilmActionPerformed
        int izabraniRedStavke = tblStavke.getSelectedRow();
        if(izabraniRedStavke>-1){
            modelTabeleStavke.izbrisiStavku(izabraniRedStavke);
        }
    }//GEN-LAST:event_btnIzbrisiFilmActionPerformed

    private void btnSacuvajRezervacijuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSacuvajRezervacijuActionPerformed
        try{
            Zaposleni zaposleni = ClientController.getInstanca().getUlogovani();
            boolean status = chckBoxVracena.isSelected();
            
            int izabraniRedClan = tblClan.getSelectedRow();
            if(izabraniRedClan == -1){
                throw new Exception("Niste izabrali clana");
            }
            
            Clan clan = modelTabeleClan.vratiIzabranogClana(izabraniRedClan);
            
            List<StavkaRezervacije> stavke = modelTabeleStavke.getList();
            
            if(stavke.isEmpty()){
                throw new Exception("Morate uneti barem jednu stavku rezervacije");
            }
            
            rezervacija.setStatusRezervacije(status);
            rezervacija.setClan(clan);
            rezervacija.setZaposleni(zaposleni);
            if(rezervacija.getIdRezervacije() == 0){
                rezervacija.setDatumRezervacije(new Date());
            }
           
            rezervacija.setStavke(stavke);
            
            if(rezervacija.getIdRezervacije() == 0){
                ClientController.getInstanca().zapamtiRezervaciju(rezervacija);
                JOptionPane.showMessageDialog(rootPane, "Uspesno ste sacuvali rezervaciju");
            }else{
                ClientController.getInstanca().izmeniRezervacije(rezervacija);
                JOptionPane.showMessageDialog(rootPane, "Uspesno ste izmenili rezervaciju");
            }
            this.dispose();
        }catch(Exception ex){
            ex.printStackTrace();
            JOptionPane.showMessageDialog(rootPane, ex.getMessage());
        }
    }//GEN-LAST:event_btnSacuvajRezervacijuActionPerformed

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDodajFilm;
    private javax.swing.JButton btnIzbrisiFilm;
    private javax.swing.JButton btnPretraziClanove;
    private javax.swing.JButton btnPretraziFilmove;
    private javax.swing.JButton btnSacuvajRezervaciju;
    private javax.swing.JCheckBox chckBoxVracena;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable tblClan;
    private javax.swing.JTable tblFilmovi;
    private javax.swing.JTable tblStavke;
    private javax.swing.JTextField txtPretragaClana;
    private javax.swing.JTextField txtPretragaFilma;
    // End of variables declaration//GEN-END:variables

    private void popuniTabeluClan() {
        try {
            String pretraga = txtPretragaClana.getText();
            List<Clan> lista;
            if (pretraga.isEmpty()) {
                lista = ClientController.getInstanca().ucitajListuClanova();
            } else {
                Clan clan = new Clan(0, pretraga, null, null, null);
                lista = ClientController.getInstanca().nadjiClanove(clan);
            }

            modelTabeleClan = new ModelTabeleClan(lista);
            tblClan.setModel(modelTabeleClan);
        } catch (Exception ex) {
            Logger.getLogger(PretragaClanForma.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void popuniTabeluFilm() {
        try {
            String pretraga = txtPretragaFilma.getText();
            List<Film> lista;
            if (pretraga.isEmpty()) {
                lista = ClientController.getInstanca().ucitajListuFilmova();
            } else {
                Film film = new Film(-1, pretraga, -1, -1, null, null, null);
                lista = ClientController.getInstanca().nadjiFilm(film);
            }

            modelTabeleFilm = new ModelTabeleFilm(lista);
            tblFilmovi.setModel(modelTabeleFilm);
        } catch (Exception ex) {
            Logger.getLogger(PretragaFilmForma.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
